[{"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\index.js":"1","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\reportWebVitals.js":"2","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\App.js":"3","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\context\\AppContext.js":"4","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Dashboard\\Patient.js":"5","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\pages\\Dashboard.js":"6","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Login.jsx":"7","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Welcome.jsx":"8","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\pages\\Home.jsx":"9","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\pages\\UserForm.jsx":"10","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\pages\\ConfirmationPrompt.jsx":"11","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\Confirm.jsx":"12","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Register.jsx":"13","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Dashboard\\Mainview.js":"14","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Dashboard\\Sidebar.js":"15","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Dashboard\\Header.js":"16","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Footer.jsx":"17","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\HamBurger.jsx":"18","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\HomeBody.jsx":"19","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\PreviousWorkForm.jsx":"20","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\DentalPainForm.jsx":"21","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\DentalPainFormPart2.jsx":"22","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\Results.jsx":"23","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\FormUserDetails.jsx":"24","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\SubmitPageForm.jsx":"25","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\FormPersonalDetails.jsx":"26","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Onboard\\StartQuestionaire.jsx":"27","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Onboard\\FirstOnboard.jsx":"28","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Onboard\\SecondOnboard.jsx":"29","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Onboard\\ThirdOnboard.jsx":"30","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Dashboard\\TheTable.js":"31"},{"size":517,"mtime":1619489574702,"results":"32","hashOfConfig":"33"},{"size":377,"mtime":1619489575125,"results":"34","hashOfConfig":"33"},{"size":1432,"mtime":1619555351340,"results":"35","hashOfConfig":"33"},{"size":936,"mtime":1619545635155,"results":"36","hashOfConfig":"33"},{"size":4142,"mtime":1619552593709,"results":"37","hashOfConfig":"33"},{"size":763,"mtime":1619545653080,"results":"38","hashOfConfig":"33"},{"size":1683,"mtime":1619545635153,"results":"39","hashOfConfig":"33"},{"size":959,"mtime":1619489574545,"results":"40","hashOfConfig":"33"},{"size":346,"mtime":1619545653081,"results":"41","hashOfConfig":"33"},{"size":3542,"mtime":1619545653081,"results":"42","hashOfConfig":"33"},{"size":1416,"mtime":1619545653079,"results":"43","hashOfConfig":"33"},{"size":3970,"mtime":1619552593711,"results":"44","hashOfConfig":"33"},{"size":1592,"mtime":1619545653078,"results":"45","hashOfConfig":"33"},{"size":272,"mtime":1619489572877,"results":"46","hashOfConfig":"33"},{"size":942,"mtime":1619489573131,"results":"47","hashOfConfig":"33"},{"size":1610,"mtime":1619562363457,"results":"48","hashOfConfig":"33"},{"size":674,"mtime":1619489573146,"results":"49","hashOfConfig":"33"},{"size":1897,"mtime":1619545653014,"results":"50","hashOfConfig":"33"},{"size":1629,"mtime":1619545653029,"results":"51","hashOfConfig":"33"},{"size":3608,"mtime":1619552593718,"results":"52","hashOfConfig":"33"},{"size":5825,"mtime":1619552593712,"results":"53","hashOfConfig":"33"},{"size":4321,"mtime":1619552593714,"results":"54","hashOfConfig":"33"},{"size":783,"mtime":1619552593719,"results":"55","hashOfConfig":"33"},{"size":3531,"mtime":1619552593716,"results":"56","hashOfConfig":"33"},{"size":2571,"mtime":1619552593721,"results":"57","hashOfConfig":"33"},{"size":2183,"mtime":1619552593715,"results":"58","hashOfConfig":"33"},{"size":660,"mtime":1619545653044,"results":"59","hashOfConfig":"33"},{"size":637,"mtime":1619545653030,"results":"60","hashOfConfig":"33"},{"size":552,"mtime":1619545653043,"results":"61","hashOfConfig":"33"},{"size":1868,"mtime":1619545653045,"results":"62","hashOfConfig":"33"},{"size":3086,"mtime":1619552593710,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"woxtbz",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"135","usedDeprecatedRules":"66"},"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\index.js",[],["136","137"],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\reportWebVitals.js",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\App.js",["138"],"import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\n\nimport { AppContextProvider } from \"./context/AppContext\";\n\nimport Welcome from \"./components/Welcome\";\nimport userForm from \"./pages/UserForm\";\nimport ConfirmationPrompt from \"./pages/ConfirmationPrompt\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Confirm from \"./components/Form/Confirm\";\nimport Patient from \"./components/Dashboard/Patient\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <AppContextProvider>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/form\" component={userForm} />\n          <Route exact path=\"/complete\" component={ConfirmationPrompt} />\n          <Route exact path=\"/welcome\" component={Welcome} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/patient/:id\" component={Patient} />\n          {/* <Route exact path=\"/onboard\" component={UserOnboard} /> */}\n          {/*<Route exact path=\"/resetpassword\" component={ResetPassword} />*/}\n        </Switch>\n      </BrowserRouter>\n    </AppContextProvider>\n  );\n};\n\nexport default App;\n","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\context\\AppContext.js",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Dashboard\\Patient.js",["139"],"import React, { useEffect, useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport \"../../styles/form.css\";\r\nimport Pdf from \"react-to-pdf\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst ref = React.createRef();\r\n\r\nconst Patient = () => {\r\n  let { id } = useParams();\r\n  const [form, setForm] = useState({});\r\n  console.log(id);\r\n\r\n  useEffect(() => {\r\n    fetch(`/api/forms/${id}`)\r\n      .then((res) => res.json())\r\n      .then((data) => setForm(data));\r\n  }, []);\r\n\r\n  console.log(form);\r\n\r\n  // const data = async () => {\r\n  //   const response = await axios.get(`/api/forms/${id}`);\r\n  //   console.log(response);\r\n  //   setForm(response.data);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   data();\r\n  // });\r\n\r\n  if (!form) return null;\r\n  return (\r\n    <>\r\n      <Pdf targetRef={ref} filename=\"patient.pdf\">\r\n        {({ toPdf }) => <button onClick={toPdf}>Generate Pdf</button>}\r\n      </Pdf>\r\n      <div className=\"first-page-form-container-main submit-page\" ref={ref}>\r\n        <div className=\"first-page-form-container\">\r\n          <form className=\"first-page-form\">\r\n            <p>Name:</p>\r\n            <p>{form.name}</p>\r\n            <Divider />\r\n            <p>Email:</p>\r\n            <p>{form.email}</p>\r\n            <Divider />\r\n            <p>Age:</p>\r\n            <p>{form.age}</p>\r\n            <Divider />\r\n            <p>Gender:</p>\r\n            <p>{form.gender}</p>\r\n            <Divider />\r\n            <p>When was your last dental visit?</p>\r\n            <p>{form.lastDentalVisit}</p>\r\n            <Divider />\r\n            <p>Did the dentist tell you that you need dental work?</p>\r\n            <p>{form.dentalWorkNeeded}</p>\r\n            <Divider />\r\n            <p>What were you told by the dentist?</p>\r\n            <TextField\r\n              disabled\r\n              style={{ width: \"100%\" }}\r\n              id=\"dentistTold\"\r\n              multiline\r\n              variant=\"outlined\"\r\n              value={form.dentistTold || \"\"}\r\n            />\r\n            <Divider style={{ marginTop: 20 }} />\r\n            <p>Are you currently experiencing any oral pain?</p>\r\n            <p>{form.dentalPain}</p>\r\n            <Divider />\r\n            <p>Where is the pain?</p>\r\n            <p>{form.painLocation}</p>\r\n            <Divider />\r\n            <p>How bad is your pain?</p>\r\n            <p>{form.painStrength}</p>\r\n            <Divider />\r\n            <p>How long have you been in pain?</p>\r\n            <p>{form.painDuration}</p>\r\n            <Divider />\r\n            <p>What causes the pain?</p>\r\n            <p>{form.painCause}</p>\r\n            <Divider />\r\n            <p>\r\n              If hot and cold causes pain does the pain linger for more than 30\r\n              seconds?\r\n            </p>\r\n            <p>{form.painLingering}</p>\r\n            <Divider />\r\n            <p>If chewing causes pain, is the pain upon release of the bite?</p>\r\n            <p>{form.painBiteRelease}</p>\r\n            <Divider />\r\n            <p>Have you ever had a cavity?</p>\r\n            <p>{form.cavitiesBefore}</p>\r\n            <Divider />\r\n            <p>Have you ever had a root canal?</p>\r\n            <p>{form.rootCanalBefore}</p>\r\n            <Divider />\r\n            <p>Have you had a tooth pulled or removed?</p>\r\n            <p>{form.toothPulledRemoved}</p>\r\n            <Divider />\r\n            <p>\r\n              Please add any other information you would like the dentist to\r\n              know.\r\n            </p>\r\n\r\n            <p>{form.additionalInformationForDentist}</p>\r\n            <div>\r\n              <p>X-ray Upload</p>\r\n              <p>\r\n                <img src={form.xrayUpload} alt=\"xray\" />\r\n              </p>\r\n            </div>\r\n\r\n            <TextField\r\n              disabled\r\n              style={{ width: \"100%\" }}\r\n              id=\"additionalInformationForDentist\"\r\n              multiline\r\n              variant=\"outlined\"\r\n              value={form.additionalInformationForDentist || \"\"}\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Patient;\r\n","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\pages\\Dashboard.js",["140"],"import React, { useEffect, useContext } from \"react\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport Mainview from \"../components/Dashboard/Mainview\";\r\nimport Header from \"../components/Dashboard/Header\";\r\nimport axios from \"axios\";\r\nimport Sidebar from \"../components/Dashboard/Sidebar\";\r\nimport \"../styles/Dashboard.css\";\r\n\r\nconst Dashboard = () => {\r\n  const { forms, setForms } = useContext(AppContext);\r\n\r\n  const fetchData = async () => {\r\n    const response = await axios.get(\"/api/forms/\");\r\n    setForms(response.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <div className=\"\">\r\n      <Sidebar />\r\n      <Header />\r\n      <Mainview formData={forms} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Login.jsx",["141"],"import React, { useState, useContext } from \"react\";\r\nimport { Grid, Button, TextField } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HamBurger from \"./HamBurger\";\r\nimport Footer from \"./Footer\";\r\nimport axios from \"axios\";\r\n\r\nconst Login = () => {\r\n  let history = useHistory();\r\n  const [formData, setFormData] = useState(null);\r\n  const { currentUser, setCurrentUser } = useContext(AppContext);\r\n  // const classes = useStyles();\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const response = await axios.post(\"/api/users/login\", formData);\r\n    setCurrentUser(response.data);\r\n    history.push(\"/dashboard\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HamBurger />\r\n\r\n      <Grid className=\"login\">\r\n        <h1 className=\"headerTitle\">Login Second Appinion</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <h4>Email</h4>\r\n          <TextField\r\n            className=\"text\"\r\n            variant=\"outlined\"\r\n            onChange={handleChange}\r\n          />\r\n          <h4>Password</h4>\r\n          <TextField\r\n            type=\"password\"\r\n            className=\"text\"\r\n            variant=\"outlined\"\r\n            onChange={handleChange}\r\n          />\r\n          <Link to=\"/dashboard\">\r\n            <Button variant=\"contained\" size=\"large\" id=\"bookbutton\">\r\n              Sign In\r\n            </Button>\r\n          </Link>\r\n        </form>\r\n      </Grid>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Welcome.jsx",["142"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport welcome from \"../Images/welcome.png\";\r\n\r\nconst Welcome = () => {\r\n  return (\r\n    <>\r\n      <Grid className=\"welcome\">\r\n        <img className=\"welcomeImg\" src={welcome} alt=\"welcome image\" />\r\n        <Grid className=\"welcomeBttn\">\r\n          <Link to=\"/signup\">\r\n            <Button\r\n              className=\"signup\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              id=\"bookbutton\"\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Link>\r\n          <Link to=\"/login\">\r\n            <Button\r\n              className=\"signin\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              id=\"bookbutton\"\r\n            >\r\n              Sign In\r\n            </Button>\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\pages\\Home.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\pages\\UserForm.jsx",["143"],"import React, { useState } from \"react\";\r\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport FormPersonalDetails from \"../components/Form/FormPersonalDetails\";\r\nimport FormUserDetails from \"../components/Form/FormUserDetails\";\r\nimport DentalPainForm from \"../components/Form/DentalPainForm\";\r\nimport DentalPainFormPart2 from \"../components/Form/DentalPainFormPart2\";\r\nimport PreviousWorkForm from \"../components/Form/PreviousWorkForm\";\r\nimport SubmitPageForm from \"../components/Form/SubmitPageForm\";\r\nimport Confirm from \"../components/Form/Confirm\";\r\nimport Results from \"../components/Form/Results\";\r\nimport StartQuestionaire from \"../components/Onboard/StartQuestionaire\";\r\nimport { StylesProvider } from \"@material-ui/core/styles\";\r\nimport FirstOnboard from \"../components/Onboard/FirstOnboard\";\r\nimport SecondOnboard from \"../components/Onboard/SecondOnboard\";\r\nimport ThirdOnboard from \"../components/Onboard/ThirdOnboard\";\r\n\r\nexport default function UserForm() {\r\n  const [formData, setFormData] = useState([]);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n\r\n  const steps = [\r\n    {\r\n      path:\r\n        ((\r\n          <FormPersonalDetails setFormData={setFormData} formData={formData} />\r\n        ),\r\n        (<ThirdOnboard setFormData={setFormData} formData={formData} />)),\r\n\r\n      path: <FirstOnboard />,\r\n    },\r\n    {\r\n      path: <SecondOnboard />,\r\n    },\r\n    {\r\n      path: <ThirdOnboard setFormData={setFormData} formData={formData} />,\r\n    },\r\n    {\r\n      path: <StartQuestionaire />,\r\n    },\r\n    {\r\n      path: (\r\n        <FormPersonalDetails setFormData={setFormData} formData={formData} />\r\n      ),\r\n    },\r\n    {\r\n      path: <FormUserDetails setFormData={setFormData} formData={formData} />,\r\n    },\r\n    {\r\n      path: <DentalPainForm setFormData={setFormData} formData={formData} />,\r\n    },\r\n    {\r\n      path: (\r\n        <DentalPainFormPart2 setFormData={setFormData} formData={formData} />\r\n      ),\r\n    },\r\n    {\r\n      path: <PreviousWorkForm setFormData={setFormData} formData={formData} />,\r\n    },\r\n    {\r\n      path: <SubmitPageForm setFormData={setFormData} formData={formData} />,\r\n    },\r\n    {\r\n      path: <Results />,\r\n    },\r\n    {\r\n      path: <Confirm setFormData={setFormData} formData={formData} />,\r\n    },\r\n  ];\r\n  const maxSteps = steps.length;\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"form-questions-main-container\">\r\n        <StylesProvider injectFirst>\r\n          <div className=\"form-questions-container\">\r\n            {steps[activeStep].path}\r\n          </div>\r\n        </StylesProvider>\r\n      </div>\r\n      <MobileStepper\r\n        steps={maxSteps}\r\n        position=\"bottom\"\r\n        variant=\"dots\"\r\n        activeStep={activeStep}\r\n        nextButton={\r\n          <Button\r\n            size=\"small\"\r\n            onClick={handleNext}\r\n            disabled={activeStep === maxSteps - 1}\r\n          >\r\n            <KeyboardArrowRight />\r\n          </Button>\r\n        }\r\n        backButton={\r\n          <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n            <KeyboardArrowLeft />\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\pages\\ConfirmationPrompt.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\Confirm.jsx",["144"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../../styles/form.css\";\r\n\r\nconst Confirm = ({ formData }) => {\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const form = e.target;\r\n    try {\r\n      await axios.post(\"/api/forms\", formData);\r\n      history.push(\"/complete\");\r\n      form.reset();\r\n      console.log(\"submitted\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"first-page-form-container-main submit-page\">\r\n      <div className=\"first-page-form-container\">\r\n        <form className=\"first-page-form\" onSubmit={handleSubmit}>\r\n          <p className=\"confirm-page-header\">\r\n            Confirm that the information is correct.\r\n          </p>\r\n          <p>Name:</p>\r\n          <p>{formData.name}</p>\r\n          <Divider />\r\n          <p>Email:</p>\r\n          <p>{formData.email}</p>\r\n          <Divider />\r\n          <p>Age:</p>\r\n          <p>{formData.age}</p>\r\n          <Divider />\r\n          <p>Gender:</p>\r\n          <p>{formData.gender}</p>\r\n          <Divider />\r\n          <p>When was your last dental visit?</p>\r\n          <p>{formData.lastDentalVisit}</p>\r\n          <Divider />\r\n          <p>Did the dentist tell you that you need dental work?</p>\r\n          <p>{formData.dentalWorkNeeded}</p>\r\n          <Divider />\r\n          <p>What were you told by the dentist?</p>\r\n          <TextField\r\n            disabled\r\n            style={{ width: \"100%\" }}\r\n            id=\"dentistTold\"\r\n            multiline\r\n            variant=\"outlined\"\r\n            value={formData.dentistTold || \"\"}\r\n          />\r\n          <Divider style={{ marginTop: 20 }} />\r\n          <p>Are you currently experiencing any oral pain?</p>\r\n          <p>{formData.dentalPain}</p>\r\n          <Divider />\r\n          <p>Where is the pain?</p>\r\n          <p>{formData.painLocation}</p>\r\n          <Divider />\r\n          <p>How bad is your pain?</p>\r\n          <p>{formData.painStrength}</p>\r\n          <Divider />\r\n          <p>How long have you been in pain?</p>\r\n          <p>{formData.painDuration}</p>\r\n          <Divider />\r\n          <p>What causes the pain?</p>\r\n          <p>{formData.painCause}</p>\r\n          <Divider />\r\n          <p>\r\n            If hot and cold causes pain does the pain linger for more than 30\r\n            seconds?\r\n          </p>\r\n          <p>{formData.painLingering}</p>\r\n          <Divider />\r\n          <p>If chewing causes pain, is the pain upon release of the bite?</p>\r\n          <p>{formData.painBiteRelease}</p>\r\n          <Divider />\r\n          <p>Have you ever had a cavity?</p>\r\n          <p>{formData.cavitiesBefore}</p>\r\n          <Divider />\r\n          <p>Have you ever had a root canal?</p>\r\n          <p>{formData.rootCanalBefore}</p>\r\n          <Divider />\r\n          <p>Have you had a tooth pulled or removed?</p>\r\n          <p>{formData.toothPulledRemoved}</p>\r\n          <Divider />\r\n          <p>\r\n            Please add any other information you would like the dentist to know.\r\n          </p>\r\n\r\n          <p>{formData.additionalInformationForDentist}</p>\r\n          <div>\r\n            <p>X-ray Upload</p>\r\n            <p>\r\n              <img src={formData.xrayUpload} />\r\n            </p>\r\n          </div>\r\n\r\n          <TextField\r\n            disabled\r\n            style={{ width: \"100%\" }}\r\n            id=\"additionalInformationForDentist\"\r\n            multiline\r\n            variant=\"outlined\"\r\n            value={formData.additionalInformationForDentist || \"\"}\r\n          />\r\n\r\n          <div className=\"wide-button-form-container\">\r\n            <button className=\"wide-button\" type=\"submit\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Confirm;\r\n","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Register.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Dashboard\\Mainview.js",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Dashboard\\Sidebar.js",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Dashboard\\Header.js",["145","146"],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Footer.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\HamBurger.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\HomeBody.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\PreviousWorkForm.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\DentalPainForm.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\DentalPainFormPart2.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\Results.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\FormUserDetails.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\SubmitPageForm.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\FormPersonalDetails.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Onboard\\StartQuestionaire.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Onboard\\FirstOnboard.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Onboard\\SecondOnboard.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Onboard\\ThirdOnboard.jsx",["147"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Grid, Button, Input } from \"@material-ui/core\";\r\nimport onboard3 from \"../../Images/onboard3.png\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport \"../../styles/Onboard.css\";\r\n\r\nconst ThirdOnboard = ({ formData, setFormData }) => {\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    console.log(formData);\r\n  };\r\n  const [imageSelected, setImageSelected] = useState();\r\n  const uploadImage = () => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", imageSelected);\r\n    formData.append(\"upload_preset\", \"iybd9a0l\");\r\n    axios\r\n      .post(\"https://api.cloudinary.com/v1_1/dannyypz/image/upload\", formData)\r\n      .then((response) => {\r\n        setFormData({ ...formData, xrayUpload: response.data.url });\r\n        console.log(response.data.url);\r\n        console.log(response);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <Grid className=\"onboard\">\r\n        <img src={onboard3} alt=\"doctor looking at xrays\" />\r\n        <p>\r\n          Now, let's upload or take a photo\r\n          <br />\r\n          of your Xrays and submit them\r\n          <br />\r\n          through the app.\r\n        </p>\r\n        <Input\r\n          type=\"file\"\r\n          name=\"xrayUpload\"\r\n          htmlFor=\"xrayUpload\"\r\n          onChange={\r\n            (handleChange,\r\n            (event) => {\r\n              setImageSelected(event.target.files[0]);\r\n            })\r\n          }\r\n        />\r\n        <Button\r\n          onClick={uploadImage}\r\n          variant=\"contained\"\r\n          size=\"md\"\r\n          className=\"btn-upload mt-4\"\r\n          name=\"xrayUpload\"\r\n          htmlFor=\"xrayUpload\"\r\n          enable=\"true\"\r\n        >\r\n          Upload your X-ray\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nexport default ThirdOnboard;\r\n","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Dashboard\\TheTable.js",["148","149"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"boxicons\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nexport default function TheTable({ theData }) {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  let data = theData;\r\n  console.log(data);\r\n\r\n  const handleClick = (_id) => {\r\n    history.push(`/patient/${_id}`);\r\n  };\r\n\r\n  const handleDelete = async (id, e) => {\r\n    await axios.delete(`/api/forms/${id}`).then((res) => {\r\n      console.log(res);\r\n    });\r\n  };\r\n\r\n  if (!data) return null;\r\n  return (\r\n    <TableContainer component={Paper} className={classes.tableContainer}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell className=\"table-label\">Name</TableCell>\r\n            <TableCell align=\"right\" className=\"table-label\">\r\n              Email\r\n            </TableCell>\r\n            <TableCell align=\"right\" className=\"table-label\">\r\n              Date\r\n            </TableCell>\r\n            <TableCell align=\"right\" className=\"table-label\">\r\n              Completed\r\n            </TableCell>\r\n            <TableCell align=\"right\" className=\"table-label\">\r\n              Pain Cause\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map((row) => (\r\n            <TableRow key={row._id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <a href={`mailto:${row.email}`} target=\"_blank\">\r\n                  {row.email}\r\n                </a>\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.date}</TableCell>\r\n              <TableCell align=\"right\">{row.completed}</TableCell>\r\n              <TableCell align=\"right\">{row.painCause}</TableCell>\r\n              <TableCell align=\"right\">\r\n                <Link to={`/patient/${row._id}`}>\r\n                  <box-icon\r\n                    type=\"solid\"\r\n                    name=\"edit-alt\"\r\n                    //onClick={() => handleClick(row._id)}\r\n                  ></box-icon>\r\n                </Link>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <box-icon\r\n                  name=\"trash\"\r\n                  color=\"red\"\r\n                  onClick={(e) => handleDelete(row._id, e)}\r\n                ></box-icon>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n",{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":13,"column":8,"nodeType":"156","messageId":"157","endLine":13,"endColumn":15},{"ruleId":"158","severity":1,"message":"159","line":19,"column":6,"nodeType":"160","endLine":19,"endColumn":8,"suggestions":"161"},{"ruleId":"158","severity":1,"message":"162","line":19,"column":6,"nodeType":"160","endLine":19,"endColumn":8,"suggestions":"163"},{"ruleId":"154","severity":1,"message":"164","line":13,"column":11,"nodeType":"156","messageId":"157","endLine":13,"endColumn":22},{"ruleId":"165","severity":1,"message":"166","line":10,"column":9,"nodeType":"167","endLine":10,"endColumn":73},{"ruleId":"168","severity":1,"message":"169","line":32,"column":7,"nodeType":"170","messageId":"171","endLine":32,"endColumn":11},{"ruleId":"172","severity":1,"message":"173","line":100,"column":15,"nodeType":"167","endLine":100,"endColumn":48},{"ruleId":"154","severity":1,"message":"174","line":9,"column":11,"nodeType":"156","messageId":"157","endLine":9,"endColumn":16},{"ruleId":"175","severity":1,"message":"176","line":29,"column":11,"nodeType":"167","endLine":29,"endColumn":14},{"ruleId":"154","severity":1,"message":"177","line":5,"column":10,"nodeType":"156","messageId":"157","endLine":5,"endColumn":15},{"ruleId":"154","severity":1,"message":"178","line":26,"column":9,"nodeType":"156","messageId":"157","endLine":26,"endColumn":20},{"ruleId":"179","severity":1,"message":"180","line":64,"column":17,"nodeType":"167","messageId":"181","endLine":64,"endColumn":65,"fix":"182"},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'Confirm' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["185"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["186"],"'currentUser' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-dupe-keys","Duplicate key 'path'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'forms' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Image' is defined but never used.","'handleClick' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"187","text":"188"},"no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},[2106,2106]," rel=\"noreferrer\"","Update the dependencies array to be: [id]",{"range":"193","text":"194"},"Update the dependencies array to be: [fetchData]",{"range":"195","text":"196"},[553,555],"[id]",[596,598],"[fetchData]"]