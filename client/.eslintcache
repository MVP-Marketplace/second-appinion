[{"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\index.js":"1","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\reportWebVitals.js":"2","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\App.js":"3","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\pages\\Home.jsx":"4","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\pages\\ConfirmationPrompt.jsx":"5","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\pages\\UserForm.jsx":"6","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\pages\\UserOnboard.jsx":"7","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\Confirm.jsx":"8","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Welcome.jsx":"9","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Footer.jsx":"10","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\DentalPainForm.jsx":"11","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\HamBurger.jsx":"12","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\HomeBody.jsx":"13","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\FormUserDetails.jsx":"14","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\PreviousWorkForm.jsx":"15","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\DentalPainFormPart2.jsx":"16","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\FormPersonalDetails.jsx":"17","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\SubmitPageForm.jsx":"18","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Onboard\\ThirdOnboard.jsx":"19","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Onboard\\FirstOnboard.jsx":"20","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Onboard\\SecondOnboard.jsx":"21","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\pages\\Dashboard.js":"22","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Dashboard\\Mainboard.js":"23","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Dashboard\\TheTable.js":"24"},{"size":517,"mtime":1617842218143,"results":"25","hashOfConfig":"26"},{"size":377,"mtime":1617842218147,"results":"27","hashOfConfig":"26"},{"size":1302,"mtime":1619060020042,"results":"28","hashOfConfig":"26"},{"size":316,"mtime":1617842218144,"results":"29","hashOfConfig":"26"},{"size":1614,"mtime":1617842218144,"results":"30","hashOfConfig":"26"},{"size":3472,"mtime":1617842218145,"results":"31","hashOfConfig":"26"},{"size":1386,"mtime":1617842218145,"results":"32","hashOfConfig":"26"},{"size":3937,"mtime":1619054742511,"results":"33","hashOfConfig":"26"},{"size":959,"mtime":1617842218102,"results":"34","hashOfConfig":"26"},{"size":750,"mtime":1618694526989,"results":"35","hashOfConfig":"26"},{"size":5792,"mtime":1617842217962,"results":"36","hashOfConfig":"26"},{"size":1849,"mtime":1619058138423,"results":"37","hashOfConfig":"26"},{"size":1930,"mtime":1619055349736,"results":"38","hashOfConfig":"26"},{"size":3714,"mtime":1617842218035,"results":"39","hashOfConfig":"26"},{"size":3575,"mtime":1617842218035,"results":"40","hashOfConfig":"26"},{"size":4288,"mtime":1617842217963,"results":"41","hashOfConfig":"26"},{"size":2150,"mtime":1617842218034,"results":"42","hashOfConfig":"26"},{"size":2538,"mtime":1617842218036,"results":"43","hashOfConfig":"26"},{"size":1979,"mtime":1619055349749,"results":"44","hashOfConfig":"26"},{"size":642,"mtime":1619055349738,"results":"45","hashOfConfig":"26"},{"size":545,"mtime":1619055349748,"results":"46","hashOfConfig":"26"},{"size":535,"mtime":1619057391410,"results":"47","hashOfConfig":"26"},{"size":169,"mtime":1619058904286,"results":"48","hashOfConfig":"26"},{"size":2082,"mtime":1619058935181,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1nf8w6z",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\index.js",[],["104","105"],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\reportWebVitals.js",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\App.js",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\pages\\Home.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\pages\\ConfirmationPrompt.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\pages\\UserForm.jsx",["106"],"import React, { useState } from \"react\";\r\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport FormPersonalDetails from \"../components/Form/FormPersonalDetails\";\r\nimport FormUserDetails from \"../components/Form/FormUserDetails\";\r\nimport DentalPainForm from \"../components/Form/DentalPainForm\";\r\nimport DentalPainFormPart2 from \"../components/Form/DentalPainFormPart2\";\r\nimport PreviousWorkForm from \"../components/Form/PreviousWorkForm\";\r\nimport SubmitPageForm from \"../components/Form/SubmitPageForm\";\r\nimport Confirm from \"../components/Form/Confirm\";\r\nimport { StylesProvider } from \"@material-ui/core/styles\";\r\nimport FirstOnboard from \"../components/Onboard/FirstOnboard\";\r\nimport SecondOnboard from \"../components/Onboard/SecondOnboard\";\r\nimport ThirdOnboard from \"../components/Onboard/ThirdOnboard\";\r\n\r\nexport default function UserForm() {\r\n  const [formData, setFormData] = useState([]);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n\r\n  const steps = [\r\n    {\r\n      path:\r\n        ((\r\n          <FormPersonalDetails setFormData={setFormData} formData={formData} />\r\n        ),\r\n        (<ThirdOnboard setFormData={setFormData} formData={formData} />)),\r\n\r\n      path: <FirstOnboard />,\r\n    },\r\n    {\r\n      path: <SecondOnboard />,\r\n    },\r\n    {\r\n      path: <ThirdOnboard setFormData={setFormData} formData={formData} />,\r\n    },\r\n    {\r\n      path: (\r\n        <FormPersonalDetails setFormData={setFormData} formData={formData} />\r\n      ),\r\n    },\r\n    {\r\n      path: <FormUserDetails setFormData={setFormData} formData={formData} />,\r\n    },\r\n    {\r\n      path: <DentalPainForm setFormData={setFormData} formData={formData} />,\r\n    },\r\n    {\r\n      path: (\r\n        <DentalPainFormPart2 setFormData={setFormData} formData={formData} />\r\n      ),\r\n    },\r\n    {\r\n      path: <PreviousWorkForm setFormData={setFormData} formData={formData} />,\r\n    },\r\n    {\r\n      path: <SubmitPageForm setFormData={setFormData} formData={formData} />,\r\n    },\r\n    {\r\n      path: <Confirm setFormData={setFormData} formData={formData} />,\r\n    },\r\n  ];\r\n  const maxSteps = steps.length;\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"form-questions-main-container\">\r\n        <StylesProvider injectFirst>\r\n          <div className=\"form-questions-container\">\r\n            {steps[activeStep].path}\r\n          </div>\r\n          <MobileStepper\r\n            steps={maxSteps}\r\n            position=\"bottom\"\r\n            variant=\"dots\"\r\n            activeStep={activeStep}\r\n            nextButton={\r\n              <Button\r\n                size=\"small\"\r\n                onClick={handleNext}\r\n                disabled={activeStep === maxSteps - 1}\r\n              >\r\n                <KeyboardArrowRight />\r\n              </Button>\r\n            }\r\n            backButton={\r\n              <Button\r\n                size=\"small\"\r\n                onClick={handleBack}\r\n                disabled={activeStep === 0}\r\n              >\r\n                <KeyboardArrowLeft />\r\n              </Button>\r\n            }\r\n          />\r\n        </StylesProvider>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\pages\\UserOnboard.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\Confirm.jsx",["107"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Confirm = ({ formData }) => {\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const form = e.target;\r\n    try {\r\n      await axios.post(\"/api/forms\", formData);\r\n      history.push(\"/complete\");\r\n      form.reset();\r\n      console.log(\"submitted\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"first-page-form-container-main submit-page\">\r\n      <div className=\"first-page-form-container\">\r\n        <form className=\"first-page-form\" onSubmit={handleSubmit}>\r\n          <p className=\"confirm-page-header\">\r\n            Confirm that the information is correct.\r\n          </p>\r\n          <p>Name:</p>\r\n          <p>{formData.name}</p>\r\n          <Divider />\r\n          <p>Email:</p>\r\n          <p>{formData.email}</p>\r\n          <Divider />\r\n          <p>Age:</p>\r\n          <p>{formData.age}</p>\r\n          <Divider />\r\n          <p>Gender:</p>\r\n          <p>{formData.gender}</p>\r\n          <Divider />\r\n          <p>When was your last dental visit?</p>\r\n          <p>{formData.lastDentalVisit}</p>\r\n          <Divider />\r\n          <p>Did the dentist tell you that you need dental work?</p>\r\n          <p>{formData.dentalWorkNeeded}</p>\r\n          <Divider />\r\n          <p>What were you told by the dentist?</p>\r\n          <TextField\r\n            disabled\r\n            style={{ width: \"100%\" }}\r\n            id=\"dentistTold\"\r\n            multiline\r\n            variant=\"outlined\"\r\n            value={formData.dentistTold || \"\"}\r\n          />\r\n          <Divider style={{ marginTop: 20 }} />\r\n          <p>Are you currently experiencing any oral pain?</p>\r\n          <p>{formData.dentalPain}</p>\r\n          <Divider />\r\n          <p>Where is the pain?</p>\r\n          <p>{formData.painLocation}</p>\r\n          <Divider />\r\n          <p>How bad is your pain?</p>\r\n          <p>{formData.painStrength}</p>\r\n          <Divider />\r\n          <p>How long have you been in pain?</p>\r\n          <p>{formData.painDuration}</p>\r\n          <Divider />\r\n          <p>What causes the pain?</p>\r\n          <p>{formData.painCause}</p>\r\n          <Divider />\r\n          <p>\r\n            If hot and cold causes pain does the pain linger for more than 30\r\n            seconds?\r\n          </p>\r\n          <p>{formData.painLingering}</p>\r\n          <Divider />\r\n          <p>If chewing causes pain, is the pain upon release of the bite?</p>\r\n          <p>{formData.painBiteRelease}</p>\r\n          <Divider />\r\n          <p>Have you ever had a cavity?</p>\r\n          <p>{formData.cavitiesBefore}</p>\r\n          <Divider />\r\n          <p>Have you ever had a root canal?</p>\r\n          <p>{formData.rootCanalBefore}</p>\r\n          <Divider />\r\n          <p>Have you had a tooth pulled or removed?</p>\r\n          <p>{formData.toothPulledRemoved}</p>\r\n          <Divider />\r\n          <p>\r\n            Please add any other information you would like the dentist to know.\r\n          </p>\r\n\r\n          <p>{formData.additionalInformationForDentist}</p>\r\n          <div>\r\n            <p>X-ray Upload</p>\r\n            <p>\r\n              <img src={formData.xrayUpload} />\r\n            </p>\r\n          </div>\r\n\r\n          <TextField\r\n            disabled\r\n            style={{ width: \"100%\" }}\r\n            id=\"additionalInformationForDentist\"\r\n            multiline\r\n            variant=\"outlined\"\r\n            value={formData.additionalInformationForDentist || \"\"}\r\n          />\r\n\r\n          <div className=\"wide-button-form-container\">\r\n            <button className=\"wide-button\" type=\"submit\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Confirm;\r\n","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Welcome.jsx",["108"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport welcome from \"../Images/welcome.png\";\r\n\r\nconst Welcome = () => {\r\n  return (\r\n    <>\r\n      <Grid className=\"welcome\">\r\n        <img className=\"welcomeImg\" src={welcome} alt=\"welcome image\" />\r\n        <Grid className=\"welcomeBttn\">\r\n          <Link to=\"/signup\">\r\n            <Button\r\n              className=\"signup\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              id=\"bookbutton\"\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Link>\r\n          <Link to=\"/login\">\r\n            <Button\r\n              className=\"signin\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              id=\"bookbutton\"\r\n            >\r\n              Sign In\r\n            </Button>\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Footer.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\DentalPainForm.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\HamBurger.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\HomeBody.jsx",["109"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Home from \"../Images/image (11).png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport time from \"../Images/time.png\";\r\nimport customer from \"../Images/customer.png\";\r\nimport pill from \"../Images/pill.png\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     margin: {\r\n//       margin: theme.spacing(4),\r\n//     }\r\n//   }));\r\nconst HomeBody = () => {\r\n  // const classes = useStyles();\r\n  return (\r\n    <Grid className=\"container\">\r\n      <Grid className=\"headerHome\">\r\n        <h1 className=\"headerTitle\">Get a second opinion</h1>\r\n        <h3 className=\"headerSubTitle\">Meet your new Specialist</h3>\r\n        {/* <img className=\"homeImg\" src={Home} alt=\"Customer in a Dentist Chair\"/> */}\r\n      </Grid>\r\n      <img className=\"homeImg\" src={Home} alt=\"Customer in a Dentist Chair\" />\r\n      <Grid>\r\n        <Link className=\"button-link\" to=\"/form\">\r\n          <Button variant=\"contained\" size=\"large\" id=\"bookbutton\">\r\n            START HERE!\r\n          </Button>\r\n        </Link>\r\n      </Grid>\r\n      <div>\r\n        <h1 className=\"reasonTitle\">Why us?</h1>\r\n      </div>\r\n      <Grid className=\"btmBody\">\r\n        <Grid className=\"picAndText\">\r\n          <img className=\"pic\" src={time} alt=\"Clock\" />\r\n          <h4 className=\"picSubTitle\">\r\n            Timely Second Opinion From Field Experts\r\n          </h4>\r\n        </Grid>\r\n        <Grid className=\"picAndText\">\r\n          <img className=\"pic\" src={customer} alt=\"Customer on the Phone\" />\r\n          <h4 className=\"picSubTitle\">Build Trusting Relationships</h4>\r\n        </Grid>\r\n        <Grid className=\"picAndText\">\r\n          <img className=\"pic\" src={pill} alt=\"Pill\" />\r\n          <h4 className=\"picSubTitle\">Service Promise</h4>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default HomeBody;\r\n","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\FormUserDetails.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\PreviousWorkForm.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\DentalPainFormPart2.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\FormPersonalDetails.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Form\\SubmitPageForm.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Onboard\\ThirdOnboard.jsx",["110","111"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Grid, Button, Input } from \"@material-ui/core\";\r\nimport onboard3 from \"../../Images/onboard3.png\";\r\nimport { Image } from \"cloudinary-react\";\r\n\r\nconst ThirdOnboard = ({ formData, setFormData }) => {\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    console.log(formData);\r\n  };\r\n  const [imageSelected, setImageSelected] = useState();\r\n  const uploadImage = () => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", imageSelected);\r\n    formData.append(\"upload_preset\", \"iybd9a0l\");\r\n\r\n    axios\r\n      .post(\"https://api.cloudinary.com/v1_1/dannyypz/image/upload\", formData)\r\n      .then((response) => {\r\n        setFormData({ ...formData, xrayUpload: response.data.url });\r\n        console.log(response);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <Grid className=\"onboard3\">\r\n        <img className=\"img3\" src={onboard3} alt=\"Doctor Looking At X-rays\" />\r\n        <h1 className=\"onboard3Title\">\r\n          Now, let’s upload or take a photo\r\n          <br />\r\n          of your Xrays and submit them\r\n          <br />\r\n          through the app.\r\n        </h1>\r\n        <Input\r\n          type=\"file\"\r\n          name=\"xrayUpload\"\r\n          htmlFor=\"xrayUpload\"\r\n          onChange={\r\n            (handleChange,\r\n            (event) => {\r\n              setImageSelected(event.target.files[0]);\r\n            })\r\n          }\r\n        />\r\n        <Button\r\n          onClick={uploadImage}\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          id=\"bookbutton\"\r\n          name=\"xrayUpload\"\r\n          htmlFor=\"xrayUpload\"\r\n        >\r\n          Submit\r\n        </Button>\r\n\r\n        <h3 className=\"onboard3SubTitle\">\r\n          Don't have an X-ray? No problem, you\r\n          <br />\r\n          <a>can send us a picture of your mouth</a>\r\n        </h3>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ThirdOnboard;\r\n","C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Onboard\\FirstOnboard.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Onboard\\SecondOnboard.jsx",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\pages\\Dashboard.js",["112"],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Dashboard\\Mainboard.js",[],"C:\\Users\\JEPYPC\\Desktop\\second-appinion\\client\\src\\components\\Dashboard\\TheTable.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":30,"column":7,"nodeType":"119","messageId":"120","endLine":30,"endColumn":11},{"ruleId":"121","severity":1,"message":"122","line":99,"column":15,"nodeType":"123","endLine":99,"endColumn":48},{"ruleId":"124","severity":1,"message":"125","line":10,"column":9,"nodeType":"123","endLine":10,"endColumn":73},{"ruleId":"126","severity":1,"message":"127","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":20},{"ruleId":"126","severity":1,"message":"130","line":5,"column":10,"nodeType":"128","messageId":"129","endLine":5,"endColumn":15},{"ruleId":"131","severity":1,"message":"132","line":61,"column":11,"nodeType":"123","endLine":61,"endColumn":14},{"ruleId":"126","severity":1,"message":"133","line":7,"column":19,"nodeType":"128","messageId":"129","endLine":7,"endColumn":26},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-dupe-keys","Duplicate key 'path'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setForm' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]