[{"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Register.jsx":"1","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Form/Confirm.jsx":"2","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/pages/ConfirmationPrompt.jsx":"3","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Dashboard/Patient.js":"4","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Form/DentalPainForm.jsx":"5","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Form/DentalPainFormPart2.jsx":"6","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Form/FormPersonalDetails.jsx":"7","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Form/FormUserDetails.jsx":"8","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Form/PreviousWorkForm.jsx":"9","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Form/Results.jsx":"10","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Form/SubmitPageForm.jsx":"11","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/reportWebVitals.js":"12","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Dashboard/Mainview.js":"13","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Login.jsx":"14","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Dashboard/TheTable.js":"15","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Welcome.jsx":"16","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/App.jsx":"17","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/HomeBody.jsx":"18","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Onboard/FirstOnboard.jsx":"19","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Onboard/StartQuestionaire.jsx":"20","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/pages/Dashboard.jsx":"21","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Dashboard/Sidebar.js":"22","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/utils/ButtonMailto.jsx":"23","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/pages/Home.jsx":"24","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/context/AppContext.js":"25","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Dashboard/Header.js":"26","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Onboard/SecondOnboard.jsx":"27"},{"size":1539,"mtime":1619511618959,"results":"28","hashOfConfig":"29"},{"size":3846,"mtime":1619551955288,"results":"30","hashOfConfig":"29"},{"size":1367,"mtime":1619509413565,"results":"31","hashOfConfig":"29"},{"size":3843,"mtime":1619563239916,"results":"32","hashOfConfig":"29"},{"size":5650,"mtime":1619551968720,"results":"33","hashOfConfig":"29"},{"size":4181,"mtime":1619551971762,"results":"34","hashOfConfig":"29"},{"size":2109,"mtime":1619551975586,"results":"35","hashOfConfig":"29"},{"size":3412,"mtime":1619551978611,"results":"36","hashOfConfig":"29"},{"size":3493,"mtime":1619553592896,"results":"37","hashOfConfig":"29"},{"size":753,"mtime":1619551985264,"results":"38","hashOfConfig":"29"},{"size":2485,"mtime":1619551989316,"results":"39","hashOfConfig":"29"},{"size":364,"mtime":1619480630197,"results":"40","hashOfConfig":"29"},{"size":259,"mtime":1619480630193,"results":"41","hashOfConfig":"29"},{"size":1625,"mtime":1619482317506,"results":"42","hashOfConfig":"29"},{"size":3334,"mtime":1619562140026,"results":"43","hashOfConfig":"29"},{"size":921,"mtime":1619480630196,"results":"44","hashOfConfig":"29"},{"size":1498,"mtime":1619553592893,"results":"45","hashOfConfig":"29"},{"size":1579,"mtime":1619509413563,"results":"46","hashOfConfig":"29"},{"size":612,"mtime":1619511618957,"results":"47","hashOfConfig":"29"},{"size":632,"mtime":1619511618958,"results":"48","hashOfConfig":"29"},{"size":796,"mtime":1619561360198,"results":"49","hashOfConfig":"29"},{"size":728,"mtime":1619555193752,"results":"50","hashOfConfig":"29"},{"size":336,"mtime":1619555417787,"results":"51","hashOfConfig":"29"},{"size":329,"mtime":1619509413566,"results":"52","hashOfConfig":"29"},{"size":899,"mtime":1619480630196,"results":"53","hashOfConfig":"29"},{"size":1350,"mtime":1619558055480,"results":"54","hashOfConfig":"29"},{"size":529,"mtime":1619511618958,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"uger4s",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Register.jsx",[],["118","119"],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Form/Confirm.jsx",["120"],"import React from \"react\";\nimport axios from \"axios\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../../styles/Form.css\";\n\nconst Confirm = ({ formData }) => {\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const form = e.target;\n    try {\n      await axios.post(\"/api/forms\", formData);\n      history.push(\"/complete\");\n      form.reset();\n      console.log(\"submitted\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"first-page-form-container-main submit-page\">\n      <div className=\"first-page-form-container\">\n        <form className=\"first-page-form\" onSubmit={handleSubmit}>\n          <p className=\"confirm-page-header\">\n            Confirm that the information is correct.\n          </p>\n          <p>Name:</p>\n          <p>{formData.name}</p>\n          <Divider />\n          <p>Email:</p>\n          <p>{formData.email}</p>\n          <Divider />\n          <p>Age:</p>\n          <p>{formData.age}</p>\n          <Divider />\n          <p>Gender:</p>\n          <p>{formData.gender}</p>\n          <Divider />\n          <p>When was your last dental visit?</p>\n          <p>{formData.lastDentalVisit}</p>\n          <Divider />\n          <p>Did the dentist tell you that you need dental work?</p>\n          <p>{formData.dentalWorkNeeded}</p>\n          <Divider />\n          <p>What were you told by the dentist?</p>\n          <TextField\n            disabled\n            style={{ width: \"100%\" }}\n            id=\"dentistTold\"\n            multiline\n            variant=\"outlined\"\n            value={formData.dentistTold || \"\"}\n          />\n          <Divider style={{ marginTop: 20 }} />\n          <p>Are you currently experiencing any oral pain?</p>\n          <p>{formData.dentalPain}</p>\n          <Divider />\n          <p>Where is the pain?</p>\n          <p>{formData.painLocation}</p>\n          <Divider />\n          <p>How bad is your pain?</p>\n          <p>{formData.painStrength}</p>\n          <Divider />\n          <p>How long have you been in pain?</p>\n          <p>{formData.painDuration}</p>\n          <Divider />\n          <p>What causes the pain?</p>\n          <p>{formData.painCause}</p>\n          <Divider />\n          <p>\n            If hot and cold causes pain does the pain linger for more than 30\n            seconds?\n          </p>\n          <p>{formData.painLingering}</p>\n          <Divider />\n          <p>If chewing causes pain, is the pain upon release of the bite?</p>\n          <p>{formData.painBiteRelease}</p>\n          <Divider />\n          <p>Have you ever had a cavity?</p>\n          <p>{formData.cavitiesBefore}</p>\n          <Divider />\n          <p>Have you ever had a root canal?</p>\n          <p>{formData.rootCanalBefore}</p>\n          <Divider />\n          <p>Have you had a tooth pulled or removed?</p>\n          <p>{formData.toothPulledRemoved}</p>\n          <Divider />\n          <p>\n            Please add any other information you would like the dentist to know.\n          </p>\n\n          <p>{formData.additionalInformationForDentist}</p>\n          <div>\n            <p>X-ray Upload</p>\n            <p>\n              <img src={formData.xrayUpload} />\n            </p>\n          </div>\n\n          <TextField\n            disabled\n            style={{ width: \"100%\" }}\n            id=\"additionalInformationForDentist\"\n            multiline\n            variant=\"outlined\"\n            value={formData.additionalInformationForDentist || \"\"}\n          />\n\n          <div className=\"wide-button-form-container\">\n            <button className=\"wide-button\" type=\"submit\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Confirm;\n","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/pages/ConfirmationPrompt.jsx",[],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Dashboard/Patient.js",["121"],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Form/DentalPainForm.jsx",[],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Form/DentalPainFormPart2.jsx",[],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Form/FormPersonalDetails.jsx",[],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Form/FormUserDetails.jsx",[],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Form/PreviousWorkForm.jsx",[],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Form/Results.jsx",[],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Form/SubmitPageForm.jsx",[],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/reportWebVitals.js",[],["122","123"],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Dashboard/Mainview.js",[],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Login.jsx",["124"],"import React, { useState, useContext } from \"react\";\nimport { Grid, Button, TextField } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { AppContext } from \"../context/AppContext\";\nimport { Link } from \"react-router-dom\";\nimport HamBurger from \"./HamBurger\";\nimport Footer from \"./Footer\";\nimport axios from \"axios\";\n\nconst Login = () => {\n  let history = useHistory();\n  const [formData, setFormData] = useState(null);\n  const { currentUser, setCurrentUser } = useContext(AppContext);\n  // const classes = useStyles();\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const response = await axios.post(\"/api/users/login\", formData);\n    setCurrentUser(response.data);\n    history.push(\"/dashboard\");\n  };\n\n  return (\n    <>\n      <HamBurger />\n\n      <Grid className=\"login\">\n        <h1 className=\"headerTitle\">Login Second Appinion</h1>\n        <form onSubmit={handleSubmit}>\n          <h4>Email</h4>\n          <TextField\n            className=\"text\"\n            variant=\"outlined\"\n            onChange={handleChange}\n          />\n          <h4>Password</h4>\n          <TextField\n            type=\"password\"\n            className=\"text\"\n            variant=\"outlined\"\n            onChange={handleChange}\n          />\n          <Link to=\"/dashboard\">\n            <Button variant=\"contained\" size=\"large\" id=\"bookbutton\">\n              Sign In\n            </Button>\n          </Link>\n        </form>\n      </Grid>\n      <Footer />\n    </>\n  );\n};\n\nexport default Login;\n",["125","126"],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Dashboard/TheTable.js",["127"],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Welcome.jsx",["128"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport welcome from \"../Images/welcome.png\";\n\nconst Welcome = () => {\n  return (\n    <>\n      <Grid className=\"welcome\">\n        <img className=\"welcomeImg\" src={welcome} alt=\"welcome image\" />\n        <Grid className=\"welcomeBttn\">\n          <Link to=\"/signup\">\n            <Button\n              className=\"signup\"\n              variant=\"contained\"\n              size=\"large\"\n              id=\"bookbutton\"\n            >\n              Sign Up\n            </Button>\n          </Link>\n          <Link to=\"/login\">\n            <Button\n              className=\"signin\"\n              variant=\"contained\"\n              size=\"large\"\n              id=\"bookbutton\"\n            >\n              Sign In\n            </Button>\n          </Link>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Welcome;\n","/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/App.jsx",["129"],"import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\n\nimport { AppContextProvider } from \"./context/AppContext\";\n\nimport Welcome from \"./components/Welcome\";\nimport userForm from \"./pages/UserForm\";\nimport ConfirmationPrompt from \"./pages/ConfirmationPrompt\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Confirm from \"./components/Form/Confirm\";\nimport Patient from \"./components/Dashboard/Patient\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <AppContextProvider>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/form\" component={userForm} />\n          <Route exact path=\"/complete\" component={ConfirmationPrompt} />\n          <Route exact path=\"/welcome\" component={Welcome} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/patient/:id\" component={Patient} />\n          {/* <Route exact path=\"/login\" component={Login} /> */}\n          {/* <Route exact path=\"/onboard\" component={UserOnboard} /> */}\n          {/*<Route exact path=\"/resetpassword\" component={ResetPassword} />*/}\n        </Switch>\n      </BrowserRouter>\n    </AppContextProvider>\n  );\n};\n\nexport default App;\n",["130","131"],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/HomeBody.jsx",[],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Onboard/FirstOnboard.jsx",[],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Onboard/StartQuestionaire.jsx",[],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/pages/Dashboard.jsx",["132"],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Dashboard/Sidebar.js",[],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/utils/ButtonMailto.jsx",[],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/pages/Home.jsx",[],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/context/AppContext.js",[],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Dashboard/Header.js",["133","134","135"],"/Users/tracilevine/Desktop/MVP-projects/second-appinion/client/src/components/Onboard/SecondOnboard.jsx",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":100,"column":15,"nodeType":"142","endLine":100,"endColumn":48},{"ruleId":"143","severity":1,"message":"144","line":19,"column":6,"nodeType":"145","endLine":19,"endColumn":8,"suggestions":"146"},{"ruleId":"136","replacedBy":"147"},{"ruleId":"138","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":13,"column":11,"nodeType":"151","messageId":"152","endLine":13,"endColumn":22},{"ruleId":"136","replacedBy":"153"},{"ruleId":"138","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":76,"column":49,"nodeType":"157","endLine":76,"endColumn":64},{"ruleId":"158","severity":1,"message":"159","line":10,"column":9,"nodeType":"142","endLine":10,"endColumn":73},{"ruleId":"149","severity":1,"message":"160","line":13,"column":8,"nodeType":"151","messageId":"152","endLine":13,"endColumn":15},{"ruleId":"136","replacedBy":"161"},{"ruleId":"138","replacedBy":"162"},{"ruleId":"143","severity":1,"message":"163","line":19,"column":6,"nodeType":"145","endLine":19,"endColumn":8,"suggestions":"164"},{"ruleId":"149","severity":1,"message":"165","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":20},{"ruleId":"149","severity":1,"message":"166","line":9,"column":11,"nodeType":"151","messageId":"152","endLine":9,"endColumn":16},{"ruleId":"149","severity":1,"message":"167","line":10,"column":20,"nodeType":"151","messageId":"152","endLine":10,"endColumn":31},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["170"],["168"],["169"],"no-unused-vars","'currentUser' is assigned a value but never used.","Identifier","unusedVar",["168"],["169"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Confirm' is defined but never used.",["168"],["169"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["171"],"'notification' is defined but never used.","'forms' is assigned a value but never used.","'setFormData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [id]",{"range":"176","text":"177"},"Update the dependencies array to be: [fetchData]",{"range":"178","text":"179"},[535,537],"[id]",[578,580],"[fetchData]"]